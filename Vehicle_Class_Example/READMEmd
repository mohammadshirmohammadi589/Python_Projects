# Car Booking System

This Python program implements a simple car booking system. It allows users to make bookings, display all bookings, search for bookings, cancel bookings, and view booking details.

## How to Run

1.  Clone the repository:
    ```bash
    git clone [https://github.com/YOUR_USERNAME/YOUR_REPO_NAME.git](https://www.google.com/search?q=https://github.com/YOUR_USERNAME/YOUR_REPO_NAME.git) # Replace with your repo URL
    ```
2.  Navigate to the project directory:
    ```bash
    cd CarBookingSystem
    ```
3.  Run the script:
    ```bash
    python car_booking.py  # Or whatever you named your Python file
    ```

## How to Use

The program is interactive and runs in the console. Here's how to use it:

1.  When you run the script, you'll be prompted to enter a command.
2.  Available commands:
    *   `help`: Displays help text explaining the commands.
    *   `booking`: Makes a new booking. You'll be prompted to enter your name, start date, and end date.  Dates should be in YYYY-MM-DD format.
    *   `display`: Displays all bookings.
    *   `search`: Searches for a booking by code or name.
    *   `cancel`: Cancels a booking by code.
    *   `details`: Displays details about the bookings (total cars, booked cars, available cars).
    *   `exit`: Exits the program.
3.  Enter the command and any required arguments.
4.  The program will execute the command and provide feedback.

## Code Explanation

The program uses a dictionary called `bookings` to store booking information. The keys of the dictionary are booking codes (integers), and the values are dictionaries containing the booking details (name, start date, end date, number of days).

The program defines several functions to handle the different commands:

*   `help()`: Displays the help text.
*   `validate_date(input_date)`: Validates the date format (YYYY-MM-DD) and date values.
*   `find_days(start_date, end_date)`: Calculates the number of days between two dates.
*   `booking()`: Creates a new booking and adds it to the `bookings` dictionary.
*   `cancel(code_del)`: Cancels a booking by removing it from the `bookings` dictionary.
*   `display()`: Displays all bookings.
*   `search()`: Searches for a booking by code or name.
*   `search_by_code(code_s)`: Searches for a booking by code.
*   `search_by_name(name)`: Searches for a booking by name.
*   `details()`: Displays booking details.

The main part of the program is a `while True` loop that continuously prompts the user for commands until the user enters "exit".

## License
 MIT License
